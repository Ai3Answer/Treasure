20161229
总结：
1. AS和Git
2. Butterknife
    添加依赖：gradle版本2.2
    一定要学会使用：我们的项目里面使用的是Butterknife
    绑定视图、绑定资源、设置监听
3. 主页面搭建:
    主要的就是视频播放
    主要是要学会分析流程，掌握思路
任务：
    git：一定要学会克隆和pull代码
    主页面：完成主页面的视频播放
    预习：用户模块的页面搭建
          MVP

20170103
MVP：目的：达到视图和业务的分离
解耦效果：每个功能模块之间相互独立
维护性
更加清晰

Model：数据的存取：数据的仓库，网络请求、数据库存取、本地文件的存取，数据的操作
数据得到之后，通过Presenter来进行数据的传递给视图

View：视图：用户界面
一般Activity、Fragment、View等
View会通过Presenter来进行数据的请求(数据的真实获取是在model里面)，拿到数据之后，再传递给View进行展示等

Presenter：交互中间人
View和Model沟通的桥梁

使用：
Model：数据的存取
View：视图
Presenter：中间人
View Interface：利用接口回调的方式实现数据获取(业务)过程中与视图的交互

总结:
用户模块：
登录
注册
1. Toolbar的使用
2. 自定义的对话框：DialogFragment
3. MVP模式(重点！！！)
任务：
完成登录和注册：MVP
预习：
侧滑：DrawerLayout+NavigationView
百度地图的展示

20170104
1. Home页面的搭建：
侧滑：DrawerLayout+NavigationView

2. 百度地图的key获取：官网上：申请秘钥
    1. 直接使用自己电脑里面的debug.keystore：在其他电脑上运行key会出错
        cmd
        cd .android
        keytool -list -v -keystore debug.keystore
        输入口令：android
        SHA1值

    2. 自己在项目里面放置一个debug.keystore
        debug.keystore文件放置在app下面
        指定我们使用的是项目下面的debug.keystore
        cmd
        cd 项目的debug.keystore放置的路径(cd .....app下面)
        keytool -list -v -keystore debug.keystore
        输入口令：android
        SHA1值

3. 集成的流程：
1. 添加jar包：
    1. 放置在libs下面
    2. build.gradle里面需要指定so文件的路径
    sourceSets {
            main {
                jniLibs.srcDir 'libs'
            }
        }
    可以调出来，集成jar没有问题
    SDKInitializer.initialize(getApplicationContext());
2. 清单文件里面添加权限、开发者key
    开发者的key：

3. 布局里面添加MapView的控件
4. 创建一个Application，里面初始化百度地图的SDK
   SDKInitializer.initialize(getApplicationContext());


